flickr_II_resample
flickr_rns_I_task <- makeMultilabelTask(id = "multi", data = flickr_rns_I_dat_ml,
target = paste0("class_", 1:9))
flickr_rns_II_task <- makeMultilabelTask(id = "multi", data = flickr_rns_II_dat_ml,
target = paste0("class_", 1:9))
flickr_svm <- makeLearner("classif.LiblineaRL1L2SVC", predict.type = "response") %>%
makeMultilabelBinaryRelevanceWrapper()
flickr_desc = makeResampleDesc(method = "Subsample", stratify = FALSE,
iters = 10, split = 1/100)
flickr_rns_I_resample = resample(learner = flickr_svm, task = flickr_rns_I_task,
resampling = flickr_desc,
show.info = FALSE, measures = list(multilabel.f1))
flickr_rns_II_resample = resample(learner = flickr_svm, task = flickr_rns_II_task,
resampling = flickr_desc,
show.info = FALSE, measures = list(multilabel.f1))
flickr_rns_I_resample
flickr_rns_II_resample
flickr_svm <- makeLearner("classif.lda", predict.type = "response") %>%
makeMultilabelBinaryRelevanceWrapper()
flickr_desc = makeResampleDesc(method = "Subsample", stratify = FALSE,
iters = 10, split = 1/100)
flickr_I_task <- makeMultilabelTask(id = "multi", data = flickr_I_dat_ml,
target = paste0("class_", 1:9))
flickr_II_task <- makeMultilabelTask(id = "multi", data = flickr_II_dat_ml,
target = paste0("class_", 1:9))
flickr_I_resample = resample(learner = flickr_svm, task = flickr_I_task,
resampling = flickr_desc,
show.info = FALSE, measures = list(multilabel.f1))
flickr_II_resample = resample(learner = flickr_svm, task = flickr_II_task,
resampling = flickr_desc,
show.info = FALSE, measures = list(multilabel.f1))
flickr_I_resample
flickr_II_resample
flickr_svm <- makeLearner("classif.LiblineaRL2L2SVC", predict.type = "response") %>%
makeMultilabelBinaryRelevanceWrapper()
flickr_svm <- makeLearner("classif.LiblineaRL2SVC", predict.type = "response") %>%
makeMultilabelBinaryRelevanceWrapper()
flickr_desc = makeResampleDesc(method = "Subsample", stratify = FALSE,
iters = 10, split = 1/100)
flickr_I_task <- makeMultilabelTask(id = "multi", data = flickr_I_dat_ml,
target = paste0("class_", 1:9))
flickr_II_task <- makeMultilabelTask(id = "multi", data = flickr_II_dat_ml,
target = paste0("class_", 1:9))
flickr_I_resample = resample(learner = flickr_svm, task = flickr_I_task,
resampling = flickr_desc,
show.info = FALSE, measures = list(multilabel.f1))
flickr_II_resample = resample(learner = flickr_svm, task = flickr_II_task,
resampling = flickr_desc,
show.info = FALSE, measures = list(multilabel.f1))
flickr_I_resample
flickr_II_resample
flickr_rns_I_task <- makeMultilabelTask(id = "multi", data = flickr_rns_I_dat_ml,
target = paste0("class_", 1:9))
flickr_rns_II_task <- makeMultilabelTask(id = "multi", data = flickr_rns_II_dat_ml,
target = paste0("class_", 1:9))
flickr_rns_I_resample = resample(learner = flickr_svm, task = flickr_rns_I_task,
resampling = flickr_desc,
show.info = FALSE, measures = list(multilabel.f1))
flickr_rns_II_resample = resample(learner = flickr_svm, task = flickr_rns_II_task,
resampling = flickr_desc,
show.info = FALSE, measures = list(multilabel.f1))
flickr_rns_I_resample
flickr_rns_II_resample
flickr_svm <- makeLearner("classif.logreg", predict.type = "response") %>%
makeMultilabelBinaryRelevanceWrapper()
flickr_desc = makeResampleDesc(method = "Subsample", stratify = FALSE,
iters = 10, split = 1/100)
flickr_I_task <- makeMultilabelTask(id = "multi", data = flickr_I_dat_ml,
target = paste0("class_", 1:9))
flickr_II_task <- makeMultilabelTask(id = "multi", data = flickr_II_dat_ml,
target = paste0("class_", 1:9))
flickr_I_resample = resample(learner = flickr_svm, task = flickr_I_task,
resampling = flickr_desc,
show.info = FALSE, measures = list(multilabel.f1))
flickr_II_resample = resample(learner = flickr_svm, task = flickr_II_task,
resampling = flickr_desc,
show.info = FALSE, measures = list(multilabel.f1))
flickr_svm <- makeLearner("classif.LiblineaRL2LogReg", predict.type = "response") %>%
makeMultilabelBinaryRelevanceWrapper()
flickr_desc = makeResampleDesc(method = "Subsample", stratify = FALSE,
iters = 10, split = 1/100)
flickr_I_task <- makeMultilabelTask(id = "multi", data = flickr_I_dat_ml,
target = paste0("class_", 1:9))
flickr_II_task <- makeMultilabelTask(id = "multi", data = flickr_II_dat_ml,
target = paste0("class_", 1:9))
flickr_I_resample = resample(learner = flickr_svm, task = flickr_I_task,
resampling = flickr_desc,
show.info = FALSE, measures = list(multilabel.f1))
flickr_II_resample = resample(learner = flickr_svm, task = flickr_II_task,
resampling = flickr_desc,
show.info = FALSE, measures = list(multilabel.f1))
flickr_I_resample
flickr_II_resample
flickr_rns_I_task <- makeMultilabelTask(id = "multi", data = flickr_rns_I_dat_ml,
target = paste0("class_", 1:9))
flickr_rns_II_task <- makeMultilabelTask(id = "multi", data = flickr_rns_II_dat_ml,
target = paste0("class_", 1:9))
flickr_rns_I_resample = resample(learner = flickr_svm, task = flickr_rns_I_task,
resampling = flickr_desc,
show.info = FALSE, measures = list(multilabel.f1))
flickr_rns_II_resample = resample(learner = flickr_svm, task = flickr_rns_II_task,
resampling = flickr_desc,
show.info = FALSE, measures = list(multilabel.f1))
flickr_rns_I_resample
flickr_rns_II_resample
flickr_svm <- makeLearner("classif.LiblineaRL2LogReg", predict.type = "response") %>%
makeMultilabelBinaryRelevanceWrapper()
flickr_desc = makeResampleDesc(method = "Subsample", stratify = FALSE,
iters = 10, split = 20/100)
flickr_I_task <- makeMultilabelTask(id = "multi", data = flickr_I_dat_ml,
target = paste0("class_", 1:9))
flickr_II_task <- makeMultilabelTask(id = "multi", data = flickr_II_dat_ml,
target = paste0("class_", 1:9))
flickr_I_resample = resample(learner = flickr_svm, task = flickr_I_task,
resampling = flickr_desc,
show.info = FALSE, measures = list(multilabel.f1))
flickr_II_resample = resample(learner = flickr_svm, task = flickr_II_task,
resampling = flickr_desc,
show.info = FALSE, measures = list(multilabel.f1))
flickr_I_resample
flickr_II_resample
flickr_rns_I_task <- makeMultilabelTask(id = "multi", data = flickr_rns_I_dat_ml,
target = paste0("class_", 1:9))
flickr_rns_II_task <- makeMultilabelTask(id = "multi", data = flickr_rns_II_dat_ml,
target = paste0("class_", 1:9))
flickr_rns_I_resample = resample(learner = flickr_svm, task = flickr_rns_I_task,
resampling = flickr_desc,
show.info = FALSE, measures = list(multilabel.f1))
flickr_rns_II_resample = resample(learner = flickr_svm, task = flickr_rns_II_task,
resampling = flickr_desc,
show.info = FALSE, measures = list(multilabel.f1))
flickr_rns_I_resample
flickr_rns_II_resample
flickr_svm <- makeLearner("classif.LiblineaRL1L2SVC", predict.type = "response") %>%
makeMultilabelBinaryRelevanceWrapper()
flickr_desc = makeResampleDesc(method = "Subsample", stratify = FALSE,
iters = 10, split = 20/100)
flickr_I_task <- makeMultilabelTask(id = "multi", data = flickr_I_dat_ml,
target = paste0("class_", 1:9))
flickr_II_task <- makeMultilabelTask(id = "multi", data = flickr_II_dat_ml,
target = paste0("class_", 1:9))
flickr_I_resample = resample(learner = flickr_svm, task = flickr_I_task,
resampling = flickr_desc,
show.info = FALSE, measures = list(multilabel.f1))
flickr_II_resample = resample(learner = flickr_svm, task = flickr_II_task,
resampling = flickr_desc,
show.info = FALSE, measures = list(multilabel.f1))
flickr_I_resample
flickr_II_resample
flickr_rns_I_task <- makeMultilabelTask(id = "multi", data = flickr_rns_I_dat_ml,
target = paste0("class_", 1:9))
flickr_rns_II_task <- makeMultilabelTask(id = "multi", data = flickr_rns_II_dat_ml,
target = paste0("class_", 1:9))
flickr_rns_I_resample = resample(learner = flickr_svm, task = flickr_rns_I_task,
resampling = flickr_desc,
show.info = FALSE, measures = list(multilabel.f1))
flickr_rns_II_resample = resample(learner = flickr_svm, task = flickr_rns_II_task,
resampling = flickr_desc,
show.info = FALSE, measures = list(multilabel.f1))
flickr_rns_I_resample
flickr_rns_II_resample
flickr_desc = makeResampleDesc(method = "Subsample", stratify = FALSE,
iters = 20, split = 20/100)
flickr_I_task <- makeMultilabelTask(id = "multi", data = flickr_I_dat_ml,
target = paste0("class_", 1:9))
flickr_II_task <- makeMultilabelTask(id = "multi", data = flickr_II_dat_ml,
target = paste0("class_", 1:9))
flickr_I_resample = resample(learner = flickr_svm, task = flickr_I_task,
resampling = flickr_desc,
show.info = FALSE, measures = list(multilabel.f1))
flickr_II_resample = resample(learner = flickr_svm, task = flickr_II_task,
resampling = flickr_desc,
show.info = FALSE, measures = list(multilabel.f1))
flickr_I_resample
flickr_II_resample
flickr_rns_I_task <- makeMultilabelTask(id = "multi", data = flickr_rns_I_dat_ml,
target = paste0("class_", 1:9))
flickr_rns_II_task <- makeMultilabelTask(id = "multi", data = flickr_rns_II_dat_ml,
target = paste0("class_", 1:9))
flickr_rns_I_resample = resample(learner = flickr_svm, task = flickr_rns_I_task,
resampling = flickr_desc,
show.info = FALSE, measures = list(multilabel.f1))
flickr_rns_II_resample = resample(learner = flickr_svm, task = flickr_rns_II_task,
resampling = flickr_desc,
show.info = FALSE, measures = list(multilabel.f1))
flickr_rns_I_resample
flickr_rns_II_resample
?makeLearner
LearnerProperties()
flickr_svm <- makeLearner("classif.randomForest", predict.type = "response") %>%
makeMultilabelBinaryRelevanceWrapper()
flickr_desc = makeResampleDesc(method = "Subsample", stratify = FALSE,
iters = 20, split = 20/100)
flickr_I_task <- makeMultilabelTask(id = "multi", data = flickr_I_dat_ml,
target = paste0("class_", 1:9))
flickr_II_task <- makeMultilabelTask(id = "multi", data = flickr_II_dat_ml,
target = paste0("class_", 1:9))
flickr_I_resample = resample(learner = flickr_svm, task = flickr_I_task,
resampling = flickr_desc,
show.info = FALSE, measures = list(multilabel.f1))
flickr_svm <- makeLearner("classif.xgboost", predict.type = "response") %>%
makeMultilabelBinaryRelevanceWrapper()
install.packages("xgboost")
flickr_svm <- makeLearner("classif.xgboost", predict.type = "response") %>%
makeMultilabelBinaryRelevanceWrapper()
flickr_desc = makeResampleDesc(method = "Subsample", stratify = FALSE,
iters = 20, split = 20/100)
flickr_I_task <- makeMultilabelTask(id = "multi", data = flickr_I_dat_ml,
target = paste0("class_", 1:9))
flickr_II_task <- makeMultilabelTask(id = "multi", data = flickr_II_dat_ml,
target = paste0("class_", 1:9))
flickr_I_resample = resample(learner = flickr_svm, task = flickr_I_task,
resampling = flickr_desc,
show.info = FALSE, measures = list(multilabel.f1))
flickr_II_resample = resample(learner = flickr_svm, task = flickr_II_task,
resampling = flickr_desc,
show.info = FALSE, measures = list(multilabel.f1))
flickr_I_resample
flickr_II_resample
flickr_rns_I_task <- makeMultilabelTask(id = "multi", data = flickr_rns_I_dat_ml,
target = paste0("class_", 1:9))
flickr_rns_II_task <- makeMultilabelTask(id = "multi", data = flickr_rns_II_dat_ml,
target = paste0("class_", 1:9))
flickr_rns_I_resample = resample(learner = flickr_svm, task = flickr_rns_I_task,
resampling = flickr_desc,
show.info = FALSE, measures = list(multilabel.f1))
flickr_rns_II_resample = resample(learner = flickr_svm, task = flickr_rns_II_task,
resampling = flickr_desc,
show.info = FALSE, measures = list(multilabel.f1))
flickr_rns_I_resample
flickr_rns_II_resample
r$pred
?multilabel.f1
confusion
confusionMatrix
setwd("~/Documents/TAMU/stat_632/hw1")
dhg <- function(eta, b) {
(1/2) * (1 - b^2) / ((1 + b^2 - 2 * b * eta) ^ (3/2))
}
etas <- seq(-1, 1, .01)
plot(etas, dhg(etas, 0.8), type = 'l')
sqrt(.5)
.9^2
.9^.5
foo_func <- rnorm
foo_func(10)
rep(NA< 3)
rep(NA, 3)
cdf_density <- function(x) 2 * dnorm(x) * pnorm(x)
ar_sample <- function(n = 1) {
samples <- rep(NA, n)
while (n > 0) {
x <- rnorm()
u <- runif()
if (u <= (cdf_density(x) / (2 * dnorm(x)))) {
samples[n] <- x
n <- n - 1
}
}
return(samples)
}
cdf_samples <- ar_sample(10000)
cdf_density <- function(x) 2 * dnorm(x) * pnorm(x)
ar_sample <- function(n = 1) {
samples <- rep(NA, n)
while (n > 0) {
x <- rnorm(1)
u <- runif(1)
if (u <= (cdf_density(x) / (2 * dnorm(x)))) {
samples[n] <- x
n <- n - 1
}
}
return(samples)
}
cdf_samples <- ar_sample(10000)
cdf_samples
hist(cdf_samples)
lines(cdf_density(seq(-5, 5, .01)))
hist(cdf_samples)
lines(cdf_density(seq(-5, 5, .01)))
hist(cdf_samples, freq = TRUE)
lines(cdf_density(seq(-5, 5, .01)))
hist(cdf_samples, freq = FALSE)
lines(cdf_density(seq(-5, 5, .01)))
plot(cdf_density(seq(-5, 5, .01)))
hist(cdf_samples, freq = FALSE)
plot(cdf_density(seq(-5, 5, .01)))
hist(cdf_samples, freq = FALSE)
grid <- seq(-5, 5, .01)
lines(grid, cdf_density(grid))
library(mlr)
train_data <- read_csv("intern_data.csv")
test_data <- read_csv("intern_test.csv")
View(train_data)
train_data_tall <- gather(train_data, key = "var", value = "val",
factor_key = TRUE, -y, -X1, -c, -h)
View(train_data_tall)
train_data_tall <- gather(train_data, key = "var", value = "val",
factor_key = TRUE, -y, -X1)
ggplot(train_data_tall, aes(x = val, y = y)) +
geom_point() +
facet_wrap(~ var)
train_data_tall %>%
filter(!(var %in% c("c", "h"))) %>%
ggplot(train_data_tall, aes(x = val, y = y)) +
geom_point() +
facet_wrap(~ var)
train_data_tall %>%
filter(!(var %in% c("c", "h"))) %>%
ggplot(aes(x = val, y = y)) +
geom_point() +
facet_wrap(~ var)
train_data_tall %>%
filter(!(var %in% c("c", "h")))
train_data_tall <- gather(train_data, key = "var", value = "val",
factor_key = TRUE, -y, -X1, -c, -h)
ggplot(train_data_tall, aes(x = val, y = y)) +
geom_point() +
facet_wrap(~ var)
ggplot(train_data_tall, aes(x = val, y = y)) +
geom_point() +
facet_wrap(~ c)
ggplot(train_data_tall, aes(x = val, y = y)) +
geom_point() +
facet_wrap(~ var)
ggplot(train_data_tall, aes(x = val, y = y, color = c)) +
geom_point() +
facet_wrap(~ var)
ggplot(train_data_tall, aes(x = val, y = y, color = c)) +
geom_point(size = .2) +
facet_wrap(~ var)
ggplot(train_data_tall, aes(x = val, y = y, color = c)) +
geom_point(size = 1) +
facet_wrap(~ var)
ggplot(train_data_tall, aes(x = val, y = y, color = c)) +
geom_point() +
geom_smooth() +
facet_wrap(~ var)
ggplot(train_data_tall, aes(x = val, y = y, color = c)) +
geom_point() +
geom_smooth(method = "lm") +
facet_wrap(~ var)
ggplot(train_data_tall, aes(x = val, y = y, color = h)) +
geom_point() +
geom_smooth(method = "lm") +
facet_wrap(~ var)
ggplot(train_data_tall, aes(x = val, y = y, color = c)) +
geom_point() +
geom_smooth(method = "lm") +
facet_wrap(~ var)
ggplot(train_data_tall, aes(x = val, y = y, shape = h)) +
geom_point() +
geom_smooth(method = "lm") +
facet_wrap(~ var)
ggplot(train_data_tall, aes(x = val, y = y, color = h)) +
geom_point() +
geom_smooth(method = "lm") +
facet_wrap(~ var)
ggplot(train_data_tall, aes(x = val, y = y, color = h)) +
geom_point() +
geom_smooth(method = "lm") +
facet_wrap(~ var) +
theme_bw()
ggplot(train_data_tall, aes(x = val, y = y)) +
geom_point() +
geom_smooth(method = "lm") +
facet_wrap(~ var*var)
ggplot(train_data_tall, aes(x = val, y = y, color = interaction(var, h))) +
geom_point() +
geom_smooth(method = "lm") +
facet_wrap(~ var) +
theme_bw()
ggplot(train_data_tall, aes(x = val, y = y, color = var)) +
geom_point() +
geom_smooth(method = "lm") +
facet_wrap(~ var) +
theme_bw()
ggplot(train_data_tall, aes(x = val, y = y, color = h)) +
geom_point() +
geom_smooth(method = "lm") +
facet_wrap(~ var) +
theme_bw()
ggplot(train_data_tall, aes(x = val, y = y)) +
geom_point() +
geom_smooth(method = "lm") +
facet_wrap(~ interaction(var, var))
ggplot(train_data_tall, aes(x = val, y = y, color = c)) +
geom_point() +
geom_smooth(method = "lm") +
facet_wrap(~ var)
?makeRegrTask
adobe <- makeRegrTask(id = "interview", data = train_data, target = "y")
model_data <- train_data %>%
select(-X1) %>%
mutate(c = as.factor(c), h = as.factor(h))
adobe <- makeRegrTask(id = "interview", data = model_data, target = "y")
listLearners()
listLearners("Regr")
listLearners("regr")
adobe_lm = makeLearner("regr.glm", predict.type = "response")
?makeResampleDesc
rdesc = makeResampleDesc(method = "LOO", stratify = FALSE)
hist(train_data$y)
hist(log(train_data$y))
hist(train_data$y)
hist(acrsin(train_data$y))
hist(asin(train_data$y))
hist(sqrt(train_data$y))
adobe_lm_r <- resample(learner = adobe_lm, task = adobe, resampling = rdesc,
show.info = FALSE, measures = list(regr))
adobe_lm_r <- resample(learner = adobe_lm, task = adobe, resampling = rdesc,
show.info = FALSE, measures = list(regr.mse, regr.mae))
?measures
mse
mae
?mse
adobe_lm_r <- resample(learner = adobe_lm, task = adobe, resampling = rdesc,
show.info = FALSE, measures = list(mse, mae))
adobe_lm_r
adobe_lm_r$measures.test
adobe_lm_r$models
adobe_lm_r$extract
adobe_lm_r$err.dumps
listLearnerProperties("regr")
adobe_lm$properties
listLearners("regr")
?makeLearner
adobe_ridge <- makeLearner("regr.cvglmnet", predict.type = "response", alpha = 0)
adobe_ridge_r <- resample(learner = adobe_ridge, task = adobe, resampling = rdesc,
show.info = FALSE, measures = list(mse, mae))
adobe_lm_r
adobe_ridge_r
listLearners("regr")
setwd("~/Documents/network_embedding/network_embedding")
dir()
?makeMultilabelTask
f1
install.packages("reticulate")
library(reticulate)
set.seed(1)
library(R.matlab)
library(tidyverse)
library(magrittr)
library(mlr)
library(reticulate)
flickr_dat <- readMat("true_line_flickr.mat")
flickr_rns_002_dat <- readMat("rns_002_flickr.mat")
flickr_I_embed <- flickr_dat$LINEtypeIFlicker
flickr_II_embed <- flickr_dat$LINEtypeIIFlicker
flickr_rns_I_embed <- flickr_rns_002_dat$rns002typeIFlicker
flickr_rns_II_embed <- flickr_rns_002_dat$rns002typeIIFlicker
flickr_label <- as.factor(flickr_dat$Label)
flickr_I_dat <- as_data_frame(flickr_I_embed) %>%
cbind(flickr_label) %>%
select(-V1)
flickr_II_dat <- as_data_frame(flickr_II_embed) %>%
cbind(flickr_label) %>%
select(-V1)
flickr_I_dat_ml <- flickr_I_dat %>%
mutate(i = TRUE) %>%
spread(flickr_label, i, fill = FALSE)
colnames(flickr_I_dat_ml)[101:109] %<>% paste0("class_", .)
flickr_II_dat_ml <- flickr_II_dat %>%
mutate(i = TRUE) %>%
spread(flickr_label, i, fill = FALSE)
colnames(flickr_II_dat_ml)[101:109] %<>% paste0("class_", .)
flickr_rns_I_dat <- as_data_frame(flickr_rns_I_embed) %>%
cbind(flickr_label) %>%
select(-V1)
flickr_rns_II_dat <- as_data_frame(flickr_rns_II_embed) %>%
cbind(flickr_label) %>%
select(-V1)
flickr_rns_I_dat_ml <- flickr_rns_I_dat %>%
mutate(i = TRUE) %>%
spread(flickr_label, i, fill = FALSE)
colnames(flickr_rns_I_dat_ml)[101:109] %<>% paste0("class_", .)
flickr_rns_II_dat_ml <- flickr_rns_II_dat %>%
mutate(i = TRUE) %>%
spread(flickr_label, i, fill = FALSE)
colnames(flickr_rns_II_dat_ml)[101:109] %<>% paste0("class_", .)
sk <- import("scikit-learn")
sk <- import("scikit-learn")
knitr::opts_chunk$set(echo = TRUE)
sk <- import("scikit-learn")
set.seed(1)
library(R.matlab)
library(tidyverse)
library(magrittr)
library(mlr)
library(reticulate)
sk <- import("scikit-learn")
sk <- import("sklearn")
?import
sk <- reticulate::import("sklearn")
reticulate::py_discover_config()
use_python("/Users/patrickding/anaconda3/bin/python")
sk <- reticulate::import("sklearn")
?reticulate
py_config()
use_condaenv()
reticulate::py_discover_config()
use_condaenv("/Users/patrickding/anaconda3/bin/python")
sk <- reticulate::import("sklearn")
reticulate::py_discover_config()
sk <- reticulate::import("sklearn")
?import
reticulate::py_discover_config()
?conda_install
conda_install("/Users/patrickding/anaconda3/bin/python", c("scikit-learn"))
use_condaenv("/Users/patrickding/anaconda3/bin/python")
reticulate::py_discover_config()

"BlogCatalog" = "",
"_" = "",
"\\d\\d\\d" = "")))
ggplot(t2_plot_df, aes(x = fpr, y = tpr, color = Method)) +
facet_wrap(vars(Label)) +
geom_path() + geom_point(aes(shape = Method)) +
roc_theme
t2_plot_df %<>%
mutate(Method = str_replace_all(learner,
c("kkk" = "NN-NS",
"LINE" = "NS",
"rns" = "RNS",
"nopenalty" = "RNS No Penalty",
"BlogCatalog" = "",
"_" = "",
"\\d\\d\\d\\d" = "")))
ggplot(t2_plot_df, aes(x = fpr, y = tpr, color = Method)) +
facet_wrap(vars(Label)) +
geom_path() + geom_point(aes(shape = Method)) +
roc_theme
ggplot(t2_plot_df, aes(x = fpr, y = tpr, color = Method)) +
facet_wrap(vars(Label)) +
geom_path() +
roc_theme
ggplot(t1_plot_df, aes(x = fpr, y = tpr, color = Method)) +
facet_wrap(vars(Label)) +
geom_path() + geom_point(aes(shape = Method)) +
roc_theme
ggplot(t1_plot_df, aes(x = fpr, y = tpr, color = Method)) +
facet_wrap(vars(Label)) +
geom_path()
roc_theme
ggplot(t1_plot_df, aes(x = fpr, y = tpr, color = Method)) +
facet_wrap(vars(Label)) +
geom_path() +
roc_theme
ggplot(t1_plot_df, aes(x = fpr, y = tpr, color = Method)) +
facet_wrap(vars(Label)) +
geom_path() +
scale_size_manual(values = c(1, 1, 3, 1)) +
roc_theme
roc_theme <-
list(theme_bw(),
theme(legend.position = "bottom", legend.text = element_text(size = 12),
axis.title.x = element_blank(), axis.title.y = element_blank(),
axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)),
scale_x_continuous(breaks = seq(0, 1, 0.2)),
scale_size_manual(values = c(1, 1, 3, 1)))
ggplot(t1_plot_df, aes(x = fpr, y = tpr, color = Method)) +
facet_wrap(vars(Label)) +
geom_path() +
roc_theme
?scale_size_manual
View(t1_plot_df)
t1_plot <- ggplot(t1_plot_df, aes(x = fpr, y = tpr, color = Method)) +
facet_wrap(vars(Label)) +
geom_path() +
roc_theme
t2_plot <- ggplot(t2_plot_df, aes(x = fpr, y = tpr, color = Method)) +
facet_wrap(vars(Label)) +
geom_path() +
roc_theme
plot_grid(
ggdraw() + draw_label("Type I Objective", x = 0, hjust = 0),
ggdraw() + draw_label("Type II Objective", x = 0, hjust = 0),
t1_plot + theme(legend.position = "none"),
t2_plot + theme(legend.position = "none"),
nrow = 2, ncol = 2, rel_heights = c(.1, 1)
)
plot_grid(
ggdraw() + draw_label("Type I Objective", x = 0, hjust = 0),
ggdraw() + draw_label("Type II Objective", x = 0, hjust = 0),
t1_plot + theme(legend.position = "none"),
t2_plot + theme(legend.position = "none"),
nrow = 2, ncol = 2, rel_heights = c(.1, 1)
) %>% plot_grid(get_legend(t1_plot), ncol = 1, rel_heights = c(1, .1))
roc_plot <- plot_grid(
ggdraw() + draw_label("Type I Objective", x = 0, hjust = 0),
ggdraw() + draw_label("Type II Objective", x = 0, hjust = 0),
t1_plot + theme(legend.position = "none"),
t2_plot + theme(legend.position = "none"),
nrow = 2, ncol = 2, rel_heights = c(.1, 1)
) %>% plot_grid(get_legend(t1_plot), ncol = 1, rel_heights = c(1, .1))
dir()
ggsave("roc_plot.pdf", plot = roc_plot, device = "pdf", path = "plots",
height = 5, width = 11)
y_grob <- textGrob("False Positive Rate",
gp=gpar(fontface="bold", col="blue", fontsize=15), rot=90)
x_grob <- textGrob("True Positive Rate",
gp=gpar(fontface="bold", col="blue", fontsize=15))
roc_plot <- grid.arrange(arrangeGrob(roc_plot, left = y_grob, bottom = x_grob))
library(grid)
library(gridExtra)
roc_plot <- grid.arrange(arrangeGrob(roc_plot, left = y_grob, bottom = x_grob))
y_grob <- textGrob("False Positive Rate",
gp=gpar(fontface="bold", col="blue", fontsize=15), rot=90)
x_grob <- textGrob("True Positive Rate",
gp=gpar(fontface="bold", col="blue", fontsize=15))
roc_plot <- grid.arrange(arrangeGrob(roc_plot, left = y_grob, bottom = x_grob))
roc_plot
roc_plot <- plot_grid(
ggdraw() + draw_label("Type I Objective", x = 0, hjust = 0),
ggdraw() + draw_label("Type II Objective", x = 0, hjust = 0),
t1_plot + theme(legend.position = "none"),
t2_plot + theme(legend.position = "none"),
nrow = 2, ncol = 2, rel_heights = c(.1, 1)
) %>%
grid.arrange(arrangeGrob(left = y_grob, bottom = x_grob)) %>%
plot_grid(get_legend(t1_plot), ncol = 1, rel_heights = c(1, .1))
roc_plot <- plot_grid(
ggdraw() + draw_label("Type I Objective", x = 0, hjust = 0),
ggdraw() + draw_label("Type II Objective", x = 0, hjust = 0),
t1_plot + theme(legend.position = "none"),
t2_plot + theme(legend.position = "none"),
nrow = 2, ncol = 2, rel_heights = c(.1, 1)
) %>%
grid.arrange(arrangeGrob(left = y_grob, bottom = x_grob)) %>%
plot_grid(get_legend(t1_plot), nrow = 2, rel_heights = c(1, .1))
roc_plot <- plot_grid(
ggdraw() + draw_label("Type I Objective", x = 0, hjust = 0),
ggdraw() + draw_label("Type II Objective", x = 0, hjust = 0),
t1_plot + theme(legend.position = "none"),
t2_plot + theme(legend.position = "none"),
nrow = 2, ncol = 2, rel_heights = c(.1, 1)
) #%>% plot_grid(get_legend(t1_plot), ncol = 1, rel_heights = c(1, .1))
y_grob <- textGrob("False Positive Rate",
gp=gpar(fontface="bold", col="blue", fontsize=15), rot=90)
x_grob <- textGrob("True Positive Rate",
gp=gpar(fontface="bold", col="blue", fontsize=15))
roc_plot <- grid.arrange(arrangeGrob(roc_plot, left = y_grob, bottom = x_grob))
roc_plot
plot_grid(roc_plot, get_legend(t1_plot), ncol = 1, rel_heights = c(1, .1))
# roc plot ----
roc_plot <- plot_grid(
ggdraw() + draw_label("Type I Objective", x = 0, hjust = 0),
ggdraw() + draw_label("Type II Objective", x = 0, hjust = 0),
t1_plot + theme(legend.position = "none"),
t2_plot + theme(legend.position = "none"),
nrow = 2, ncol = 2, rel_heights = c(.1, 1)
) #%>% plot_grid(get_legend(t1_plot), ncol = 1, rel_heights = c(1, .1))
y_grob <- textGrob("False Positive Rate",
gp=gpar(fontsize=15), rot=90)
x_grob <- textGrob("True Positive Rate",
gp=gpar(fontsize=15))
roc_plot <- grid.arrange(arrangeGrob(roc_plot, left = y_grob, bottom = x_grob))
roc_plot %<>% plot_grid(get_legend(t1_plot), ncol = 1, rel_heights = c(1, .1))
roc_plot
roc_plot <- plot_grid(
ggdraw() + draw_label("Type I Objective", x = 0, hjust = 0),
ggdraw() + draw_label("Type II Objective", x = 0, hjust = 0),
t1_plot + theme(legend.position = "none"),
t2_plot + theme(legend.position = "none"),
nrow = 2, ncol = 2, rel_heights = c(.1, 1)
) #%>% plot_grid(get_legend(t1_plot), ncol = 1, rel_heights = c(1, .1))
y_grob <- textGrob("False Positive Rate",
gp=gpar(fontsize=12), rot=90)
x_grob <- textGrob("True Positive Rate",
gp=gpar(fontsize=12))
roc_plot <- grid.arrange(arrangeGrob(roc_plot, left = y_grob, bottom = x_grob))
roc_plot %<>% plot_grid(get_legend(t1_plot), ncol = 1, rel_heights = c(1, .1))
roc_plot
roc_plot
roc_plot <- plot_grid(
ggdraw() + draw_label("Type I Objective", x = 0, hjust = 0),
ggdraw() + draw_label("Type II Objective", x = 0, hjust = 0),
t1_plot + theme(legend.position = "none"),
t2_plot + theme(legend.position = "none"),
nrow = 2, ncol = 2, rel_heights = c(.1, 1)
) #%>% plot_grid(get_legend(t1_plot), ncol = 1, rel_heights = c(1, .1))
y_grob <- textGrob("True Positive Rate",
gp=gpar(fontsize=12), rot=90)
x_grob <- textGrob("False Positive Rate",
gp=gpar(fontsize=12))
roc_plot <- grid.arrange(arrangeGrob(roc_plot, left = y_grob, bottom = x_grob))
roc_plot %<>% plot_grid(get_legend(t1_plot), ncol = 1, rel_heights = c(1, .1))
ggsave("roc_plot.pdf", plot = roc_plot, device = "pdf", path = "plots",
height = 5, width = 11)
knitr::opts_chunk$set(echo = TRUE)
load(file = "perf_data/blog.Rda")
bg_compare_dat <-
rbind(
perf_as_df(rowMeans(bg_perf$micro_f1, FALSE, 2), "Micro-F1"),
perf_as_df(rowMeans(bg_perf$macro_f1, FALSE, 2), "Macro-F1")
) %>%
# filter(Method %in% c("kkk_BlogCatalog", "LINE_BlogCatalog",
# "nopenalty_BlogCatalog", "rns_015_BlogCatalog")) %>%
gather(key = "Split", value = "Score", -Method, -Type, -measure) %>%
mutate(Labeled = as.numeric(str_replace(Split, "split_", "")),
Data = "Blog Catalog",
Penalty = str_extract(Method, "\\d{2,4}") %>%
paste0(".", .) %>%
as.numeric(),
Method = str_replace(Method, "_.*", ""))
source("reporting_tools.R")
# library(clipr)
library(ggplot2)
library(ggrepel)
library(cowplot)
library(scales)
bg_compare_dat <-
rbind(
perf_as_df(rowMeans(bg_perf$micro_f1, FALSE, 2), "Micro-F1"),
perf_as_df(rowMeans(bg_perf$macro_f1, FALSE, 2), "Macro-F1")
) %>%
# filter(Method %in% c("kkk_BlogCatalog", "LINE_BlogCatalog",
# "nopenalty_BlogCatalog", "rns_015_BlogCatalog")) %>%
gather(key = "Split", value = "Score", -Method, -Type, -measure) %>%
mutate(Labeled = as.numeric(str_replace(Split, "split_", "")),
Data = "Blog Catalog",
Penalty = str_extract(Method, "\\d{2,4}") %>%
paste0(".", .) %>%
as.numeric(),
Method = str_replace(Method, "_.*", ""))
View(bg_compare_dat)
rbind(
perf_as_df(rowMeans(bg_perf$micro_f1, FALSE, 2), "Micro-F1"),
perf_as_df(rowMeans(bg_perf$macro_f1, FALSE, 2), "Macro-F1")
)
dim(bf_perf$micro_f1)
dim(bg_perf$micro_f1)
?rowMeans
library(matrixStats)
bg_compare_dat <-
rbind(
perf_as_df(rowMeans(bg_perf$micro_f1, FALSE, 2), "Micro-F1"),
perf_as_df(rowMeans(bg_perf$macro_f1, FALSE, 2), "Macro-F1"),
perf_as_df(rowSds(bg_perf$micro_f1, FALSE, 2), "Micro-F1_sd"),
perf_as_df(rowSds(bg_perf$macro_f1, FALSE, 2), "Macro-F1_sd")
) %>%
# filter(Method %in% c("kkk_BlogCatalog", "LINE_BlogCatalog",
# "nopenalty_BlogCatalog", "rns_015_BlogCatalog")) %>%
gather(key = "Split", value = "Score", -Method, -Type, -measure) %>%
mutate(Labeled = as.numeric(str_replace(Split, "split_", "")),
Data = "Blog Catalog",
Penalty = str_extract(Method, "\\d{2,4}") %>%
paste0(".", .) %>%
as.numeric(),
Method = str_replace(Method, "_.*", ""))
rbind(
perf_as_df(rowMeans(bg_perf$micro_f1, FALSE, 2), "Micro-F1"),
perf_as_df(rowMeans(bg_perf$macro_f1, FALSE, 2), "Macro-F1"),
perf_as_df(rowSds(bg_perf$micro_f1, FALSE, 2), "Micro-F1_sd"),
perf_as_df(rowSds(bg_perf$macro_f1, FALSE, 2), "Macro-F1_sd")
)
?rowMeans
?rowVars
?rowSds
rbind(
perf_as_df(rowMeans(bg_perf$micro_f1, FALSE, 2), "Micro-F1"),
perf_as_df(rowMeans(bg_perf$macro_f1, FALSE, 2), "Macro-F1"),
perf_as_df(rowSds(bg_perf$micro_f1, dim = 2), "Micro-F1_sd"),
perf_as_df(rowSds(bg_perf$macro_f1, dim = 2), "Macro-F1_sd")
)
rbind(
perf_as_df(rowMeans(bg_perf$micro_f1, FALSE, 2), "Micro-F1"),
perf_as_df(rowMeans(bg_perf$macro_f1, FALSE, 2), "Macro-F1"),
perf_as_df(rowSds(bg_perf$micro_f1, dim = 1:2), "Micro-F1_sd"),
perf_as_df(rowSds(bg_perf$macro_f1, dim = 1:2), "Macro-F1_sd")
)
dim(bg_perf$micro_f1)
rowMeans(bg_perf$micro_f1, FALSE, 2)
dim(bg_perf$micro_f1)
perf_as_df(apply(bg_perf$micro_f1, 3, function(x) sd(x) / sqrt(5)), "Micro-F1_sd")
perf_as_df(apply(bg_perf$micro_f1, 2, function(x) sd(x) / sqrt(5)), "Micro-F1_sd")
apply(bg_perf$micro_f1, 2, function(x) sd(x) / sqrt(5))
apply(bg_perf$micro_f1, 3, function(x) sd(x) / sqrt(5))
apply(bg_perf$micro_f1, 1, function(x) sd(x) / sqrt(5))
apply(bg_perf$micro_f1, c(1, 2), function(x) sd(x) / sqrt(5))
perf_as_df(apply(bg_perf$micro_f1, c(1, 2), function(x) sd(x) / sqrt(5)), "Micro-F1_sd")
bg_compare_dat <-
rbind(
perf_as_df(rowMeans(bg_perf$micro_f1, FALSE, 2), "Micro-F1"),
perf_as_df(rowMeans(bg_perf$macro_f1, FALSE, 2), "Macro-F1"),
perf_as_df(apply(bg_perf$micro_f1, c(1, 2), function(x) sd(x) / sqrt(5)), "Micro-F1_sd"),
perf_as_df(apply(bg_perf$macro_f1, c(1, 2), function(x) sd(x) / sqrt(5)), "Macro-F1_sd")
) %>%
# filter(Method %in% c("kkk_BlogCatalog", "LINE_BlogCatalog",
# "nopenalty_BlogCatalog", "rns_015_BlogCatalog")) %>%
gather(key = "Split", value = "Score", -Method, -Type, -measure) %>%
mutate(Labeled = as.numeric(str_replace(Split, "split_", "")),
Data = "Blog Catalog",
Penalty = str_extract(Method, "\\d{2,4}") %>%
paste0(".", .) %>%
as.numeric(),
Method = str_replace(Method, "_.*", ""))
View(bg_compare_dat)
rbind(
perf_as_df(rowMeans(bg_perf$micro_f1, FALSE, 2), "Micro-F1"),
perf_as_df(rowMeans(bg_perf$macro_f1, FALSE, 2), "Macro-F1"),
perf_as_df(apply(bg_perf$micro_f1, c(1, 2), function(x) sd(x) / sqrt(5)), "Micro-F1_sd"),
perf_as_df(apply(bg_perf$macro_f1, c(1, 2), function(x) sd(x) / sqrt(5)), "Macro-F1_sd")
)
foo <-   rbind(
perf_as_df(rowMeans(bg_perf$micro_f1, FALSE, 2), "Micro-F1"),
perf_as_df(rowMeans(bg_perf$macro_f1, FALSE, 2), "Macro-F1"),
perf_as_df(apply(bg_perf$micro_f1, c(1, 2), function(x) sd(x) / sqrt(5)), "Micro-F1_sd"),
perf_as_df(apply(bg_perf$macro_f1, c(1, 2), function(x) sd(x) / sqrt(5)), "Macro-F1_sd")
)
View(foo)
View(foo)
perf_as_df(apply(bg_perf$micro_f1, c(1, 2), function(x) sd(x) / sqrt(5)), "Micro-F1_sd")
baz <- perf_as_df(apply(bg_perf$micro_f1, c(1, 2), function(x) sd(x) / sqrt(5)), "Micro-F1_sd")
View(baz)
apply(bg_perf$micro_f1, c(1, 2), function(x) sd(x) / sqrt(5))
dim(apply(bg_perf$micro_f1, c(1, 2), function(x) sd(x) / sqrt(5)))
dim(perf_as_df(apply(bg_perf$micro_f1, c(1, 2), function(x) sd(x) / sqrt(5)), "Micro-F1_sd"))
View(bg_compare_dat)
load(file = "perf_data/blog.Rda")
bg_compare_dat <-
rbind(
perf_as_df(apply(bg_perf$micro_f1, c(1, 2), function(x) sd(x) / sqrt(5)), "Micro-F1_sd"),
perf_as_df(apply(bg_perf$macro_f1, c(1, 2), function(x) sd(x) / sqrt(5)), "Macro-F1_sd")
) %>%
gather(key = "Split", value = "Score", -Method, -Type, -measure) %>%
mutate(Labeled = as.numeric(str_replace(Split, "split_", "")),
Data = "Blog Catalog",
Penalty = str_extract(Method, "\\d{2,4}") %>%
paste0(".", .) %>%
as.numeric(),
Method = str_replace(Method, "_.*", ""))
View(bg_compare_dat)
bg_compare_dat <-
rbind(
perf_as_df(apply(bg_perf$micro_f1, c(1, 2), function(x) sd(x) / sqrt(5)), "Micro-F1_sd"),
perf_as_df(apply(bg_perf$macro_f1, c(1, 2), function(x) sd(x) / sqrt(5)), "Macro-F1_sd")
) %>%
gather(key = "Split", value = "Std Error", -Method, -Type, -measure) %>%
mutate(Labeled = as.numeric(str_replace(Split, "split_", "")),
Data = "Blog Catalog",
Penalty = str_extract(Method, "\\d{2,4}") %>%
paste0(".", .) %>%
as.numeric(),
Method = str_replace(Method, "_.*", ""))
load(file = "perf_data/wiki.Rda")
wiki_compare_dat <-
rbind(
perf_as_df(apply(wiki_perf$micro_f1, c(1, 2), function(x) sd(x) / sqrt(5)), "Micro-F1_sd"),
perf_as_df(apply(wiki_perf$macro_f1, c(1, 2), function(x) sd(x) / sqrt(5)), "Macro-F1_sd")
) %>%
gather(key = "Split", value = "Std Error", -Method, -Type, -measure) %>%
mutate(Labeled = as.numeric(str_replace(Split, "split_", "")),
Data = "Wikipedia",
Penalty = str_extract(Method, "\\d{2,4}") %>%
paste0(".", .) %>%
as.numeric(),
Method = str_replace(Method, "_.*", ""))
load(file = "perf_data/flickr.Rda")
flickr_compare_dat <-
rbind(
perf_as_df(rowMeans(flickr_perf$micro_f1, FALSE, 2), "Micro-F1"),
perf_as_df(rowMeans(flickr_perf$macro_f1, FALSE, 2), "Macro-F1")
) %>%
gather(key = "Split", value = "Std Error", -Method, -Type, -measure) %>%
mutate(Labeled = as.numeric(str_replace(Split, "split_", "")),
Data = "Flickr",
Penalty = str_extract(Method, "\\d{2,4}") %>%
paste0(".", .) %>%
as.numeric(),
Method = str_replace_all(Method, "_flickr|_\\d{2,4}|true_", "") %>%
str_replace("line", "LINE"))
View(flickr_compare_dat)
flickr_compare_dat <-
rbind(
perf_as_df(apply(flickr_perf$micro_f1, c(1, 2), function(x) sd(x) / sqrt(5)), "Micro-F1_sd"),
perf_as_df(apply(flickr_perf$macro_f1, c(1, 2), function(x) sd(x) / sqrt(5)), "Macro-F1_sd")
) %>%
gather(key = "Split", value = "Std Error", -Method, -Type, -measure) %>%
mutate(Labeled = as.numeric(str_replace(Split, "split_", "")),
Data = "Flickr",
Penalty = str_extract(Method, "\\d{2,4}") %>%
paste0(".", .) %>%
as.numeric(),
Method = str_replace_all(Method, "_flickr|_\\d{2,4}|true_", "") %>%
str_replace("line", "LINE"))
View(flickr_compare_dat)
View(wiki_compare_dat)
View(wiki_compare_dat)
compare_dat <- rbind(flickr_compare_dat, bg_compare_dat, #ppi_compare_dat,
wiki_compare_dat) %>%
mutate(Method = str_replace_all(Method,
c("kkk" = "NN-NS",
"LINE" = "NS",
"rns" = "RNS",
"nopenalty" = "RNS No Penalty")))
compare_table <- compare_dat %>%
group_by(Method, Type, measure, Labeled, Data) %>%
# mutate(is_best = Score == max(Score)) %>%
mutate(is_best = ifelse(Method == "RNS",
(Type == "t1_embed" & Penalty %in%
c(0.0154, 0.0144, 0.0178)) |
(Type == "t2_embed" & Penalty %in%
c(0.0197, 0.0186, 0.0224)),
Score == max(Score))) %>%
ungroup() %>%
filter(Labeled == 0.5 & is_best)
compare_table <- compare_dat %>%
group_by(Method, Type, measure, Labeled, Data) %>%
mutate(is_best = ifelse(Method == "RNS",
(Type == "t1_embed" & Penalty %in%
c(0.0154, 0.0144, 0.0178)) |
(Type == "t2_embed" & Penalty %in%
c(0.0197, 0.0186, 0.0224)),
`Std Error` == max(`Std Error`))) %>%
ungroup() %>%
filter(Labeled == 0.5 & is_best)
View(compare_table)
compare_table %>%
filter(Type == "t1_embed", measure == "Micro-F1") %>%
select(-Type, -Split, -Labeled, -is_best) %>%
unite(m_data, measure, Data) %>%
spread(key = m_data, value = Score)
compare_table %>%
filter(Type == "t1_embed", measure == "Micro-F1") %>%
select(-Type, -Split, -Labeled, -is_best) %>%
unite(m_data, measure, Data) %>%
spread(key = m_data, value = `Std Error`)
View(compare_table)
bg_compare_dat <-
rbind(
perf_as_df(apply(bg_perf$micro_f1, c(1, 2), function(x) sd(x) / sqrt(5)), "Micro-F1"),
perf_as_df(apply(bg_perf$macro_f1, c(1, 2), function(x) sd(x) / sqrt(5)), "Macro-F1")
) %>%
gather(key = "Split", value = "Std Error", -Method, -Type, -measure) %>%
mutate(Labeled = as.numeric(str_replace(Split, "split_", "")),
Data = "Blog Catalog",
Penalty = str_extract(Method, "\\d{2,4}") %>%
paste0(".", .) %>%
as.numeric(),
Method = str_replace(Method, "_.*", ""))
wiki_compare_dat <-
rbind(
perf_as_df(apply(wiki_perf$micro_f1, c(1, 2), function(x) sd(x) / sqrt(5)), "Micro-F1"),
perf_as_df(apply(wiki_perf$macro_f1, c(1, 2), function(x) sd(x) / sqrt(5)), "Macro-F1")
) %>%
gather(key = "Split", value = "Std Error", -Method, -Type, -measure) %>%
mutate(Labeled = as.numeric(str_replace(Split, "split_", "")),
Data = "Wikipedia",
Penalty = str_extract(Method, "\\d{2,4}") %>%
paste0(".", .) %>%
as.numeric(),
Method = str_replace(Method, "_.*", ""))
flickr_compare_dat <-
rbind(
perf_as_df(apply(flickr_perf$micro_f1, c(1, 2), function(x) sd(x) / sqrt(5)), "Micro-F1"),
perf_as_df(apply(flickr_perf$macro_f1, c(1, 2), function(x) sd(x) / sqrt(5)), "Macro-F1")
) %>%
gather(key = "Split", value = "Std Error", -Method, -Type, -measure) %>%
mutate(Labeled = as.numeric(str_replace(Split, "split_", "")),
Data = "Flickr",
Penalty = str_extract(Method, "\\d{2,4}") %>%
paste0(".", .) %>%
as.numeric(),
Method = str_replace_all(Method, "_flickr|_\\d{2,4}|true_", "") %>%
str_replace("line", "LINE"))
compare_dat <- rbind(flickr_compare_dat, bg_compare_dat, #ppi_compare_dat,
wiki_compare_dat) %>%
mutate(Method = str_replace_all(Method,
c("kkk" = "NN-NS",
"LINE" = "NS",
"rns" = "RNS",
"nopenalty" = "RNS No Penalty")))
compare_table <- compare_dat %>%
group_by(Method, Type, measure, Labeled, Data) %>%
mutate(is_best = ifelse(Method == "RNS",
(Type == "t1_embed" & Penalty %in%
c(0.0154, 0.0144, 0.0178)) |
(Type == "t2_embed" & Penalty %in%
c(0.0197, 0.0186, 0.0224)),
`Std Error` == max(`Std Error`))) %>%
ungroup() %>%
filter(Labeled == 0.5 & is_best)
compare_table %>%
filter(Type == "t1_embed", measure == "Micro-F1") %>%
select(-Type, -Split, -Labeled, -is_best) %>%
unite(m_data, measure, Data) %>%
spread(key = m_data, value = `Std Error`)
compare_table %>%
filter(Type == "t1_embed", measure == "Macro-F1") %>%
select(-Type, -Split, -Labeled, -is_best) %>%
unite(m_data, measure, Data) %>%
spread(key = m_data, value = Score)
compare_table %>%
filter(Type == "t1_embed", measure == "Macro-F1") %>%
select(-Type, -Split, -Labeled, -is_best) %>%
unite(m_data, measure, Data) %>%
spread(key = m_data, value = `Std Error`)
compare_table %>%
filter(Type == "t2_embed", measure == "Micro-F1") %>%
select(-Type, -Split, -Labeled, -is_best) %>%
spread(key = Data, value = Score)
compare_table %>%
filter(Type == "t2_embed", measure == "Micro-F1") %>%
select(-Type, -Split, -Labeled, -is_best) %>%
spread(key = Data, value = Score)
compare_table %>%
filter(Type == "t2_embed", measure == "Micro-F1") %>%
select(-Type, -Split, -Labeled, -is_best) %>%
spread(key = Data, value = `Std Error`)
m_data
compare_table$m_data
compare_table %>%
filter(Type == "t2_embed", measure == "Micro-F1") %>%
select(-Type, -Split, -Labeled, -is_best) %>%
spread(key = Data, value = `Std Error`)
compare_table %>%
filter(Type == "t2_embed", measure == "Macro-F1") %>%
select(-Type, -Split, -Labeled, -is_best) %>%
spread(key = Data, value = Score)
compare_table %>%
filter(Type == "t2_embed", measure == "Macro-F1") %>%
select(-Type, -Split, -Labeled, -is_best) %>%
spread(key = Data, value = `Std Error`)
